


notes:
- i know omitting 40k's army list restrictions (troops, elites, fast attack) can lead to cheese (homogenous) warbands. 
- But if i do implement this clash of clans model that might mitigate it.
- ie you have to post a defense warband to a region and have it hold out (with ressurections between battles) against several unknown Attack Warbands. You can't anticipate your foes.
- Also i think the ability to field 6 Wasps is flavorful and sim-ish in a cool way.
- I am however tempted to put a maximum on the number of squads per 500 points, etc. I like the idea of being able to field a 3-person infiltration squad, but i dont want to see 99 marines in 33 squads, if that doesnt fit the story:
  - A alternate solution to that problem would be to make small squads impractical for numbers-tactics, ideally in whichever way they are impractical in story:
    - Maybe it weakens morale
    - Maybe it makes them too unwieldy to command quickly
    - Maybe there is some overhead per-squad



yaml syntax wishlist:
- Shorthand for a commonly-repeated set of items in a hierarchy (like armories)
- Shorthand for variant templates and templates with common elements. Something like subclasses or inheritance.
- Syntax in hierarchies for slots. 'One of the following', 'n of the following', etc:
  - Maybe a field componentRequirements: 'slots'
- Syntax in hierarchies for homogenous individuals. Like a multi node with a flexible quantity:
  marineSquad:
    template: squadNode
    min: 3
    max: 20
    components:
      - marine:
          special: homogenous
      - officer:
          max: 1
      - specialWeaponMarine:
          max: 2
- Syntax for namespaces:
  - i would like to be able to call the squad node for a squad representing a warthog 'warthog' in the yaml.
  - i would also like to call the node for the individual 'warthog'
  - When it is ambigious, i would like to be able to say squads/warthog or individuals/warthog or something.
  - i would ideally like to just specify one tag or namespace, not all of them (halo/unsc/templates/individuals/warthog is inferior to halo/warthog if the halo category is the part that distinguishes it locally).
  - As a mrb short term solution, i could just make the names long, like warthogSquad...





# allowed relationships between nodes
# maybe assume each thing here is a node unless it ends in -category
hierarchy:
  - halo-category:
    - unsc-force:
      - marine-infantry:
        # This is double-nesting. Do i want it flatter?
        - marine:
            min: 3
            max: 20
        - special-weapon-marine:
            max: 2
        - comms-marine:
            max: 1
        - officer:
            max: 1
      - transport-warthog-squad:
        - transport-warthog
        - marine:
            min: 3
            max: 5
      - odst-infantry:
        - odst:
            min: 2
            max: 15
      - spartan-squad
        - spartan:
            min: 1
            max: 6
      - warthog:
        - warthog
        - marine:
            min: 2
            max: 3
    - marine


# Flatter version with comments separating sections
hierarchy:
  - halo-category:

    # UNSC
    # Warband nodes
    - unsc-force:
      - marine-infantry-squad
      - transport-warthog-squad
      - odst-infantry
      - spartan-squad
      - warthog
    - oni-force:
      - marine-infantry-squad
      - odst-infantry-squad
      - oni-wasp
      - oni-warthog

    # Squad nodes
    - marine-infantry-squad:
      - marine:
          min: 3
          max: 20
      - special-weapon-marine:
          max: 2
      - comms-marine:
          max: 1
      - officer:
          max: 1
    - transport-warthog-squad:
      - transport-warthog
      - marine:
          min: 3
          max: 5
    - odst-infantry:
      - odst:
          min: 2
          max: 15
    - spartan-squad:
      - spartan:
          min: 1
          max: 6
    - warthog:
      - warthog
      - marine:
          min: 2
          max: 3

    # Individual nodes
    - marine:
      - unsc-armory-set
    - odst:
      - unsc-full-armory-set
    - crewmate:
      - pistol
      - smg

    # Covenant
    # Warband nodes
    - covenant-force:
      - elite-lance
      - brute-lance
      - ghost

    # Squad nodes
    - elite-lance:
      - elite
          min: 1
          max: 2
      - grunt
          min: 4
          max: 14

    # Individual nodes
    - grunt: 
      - plasma-pistol
      - needler
      - plasma-grenade
    - grunt-major:
      - plasma-pistol
      - needler
      - plasma-rifle
      - plasma-grenade
    - elite:
      - plasma-pistol
      - needler
      - plasma-rifle
      - plasma-grenade
      - storm-rifle
      - carbine
      - beam-rifle
      - focus-rifle
      - covenant-armory-set
    - jackal:
      - plasma-pistol
      - needler
      - plasma-rifle
      - brute-plasma-rifle
      - jackal-shield
      - carbine
      - storm-rifle
      - spiker
      - mauler
      - boltshot
      - pistol
      - beam-rifle
      - focus-rifle

    # ...

    # Set definitions
    - covenant-standard-small-arms-set
      - plasma pistol
      - needler
      - plasma rifle


Notes on hierarchy yaml
* Tempting to make squadrons of vehicles, like 3 wasps, 5 mongeese, etc
* However i think i will ignore that until later on the MRB path
* 1 vehicle = 1 decision making unit is probably fine for the first draft of the simulation
* 40k is like this (during the game)
* Transport vehicles in 40k are more like 'templates' of squad-nodes: You pick the template and get 2 squad nodes: the infantry and the transport vehicle.
* 40k does have vehicle squadrons for cheap light vehicles
* But idk if i really _need_ mongoose squads to maintain squad coherency. They don't in the Halo games.
* I think hyphen-style is more readable, but i think camelCase everywhere might be more consistent
  * But will have to find a good way to write assaultRifleMA5B
  * assaultRifleHeavy? assaultRifleRuggedized?
* Maybe drop some hyphen bullets and just make those hashes. Can finalize that later.
* i guess the hierarchy maybe isnt exhaustive: components that are built-in to the template might be implied.
  * Example: A warthog might have a implied chaingun turret component.
* i could also do namespacing just by having long ids/names
  * halo-unsc-standard-small-arms-category
  * halo-oni-comms-marine
* See scifi-game-armygen for a randomTable stab at this same topic
  * I dont go into details of mixed squads tho.
  * Maybe i shouldnt for MRB. Wont affect gameplay much.
  * Same with dedicated transports, disembarkings


# namespaces and templates
arsenal:
  - halo-namespace:
    - unsc-namespace:
      - 

arsenal:
  - halo-category:
    - unsc-category:
      - 

arsenal:
  - halo-category:
    - weaps-category:
      - unsc-category:
        - battleRifle
        - assaultRifleMa5b

arsenal:
  - haloCategory:
    - weapsCategory:
      - unscCategory:
        - battleRifle
        - assaultRifleMa5b

arsenal:
  - halo-category:
    - weaps-category:
      - unsc-category:

        # Individual Nodes
        marine:
          template: human
          components:
            - unscBasicTraining

        # Item Nodes
        battle-rifle:
          tags:
            - firearm
          size: 2          
        assault-rifle-ma5b:
          tags:
            - firearm










armyTemplates:
  - components:
    - Requiem Veteran Infantry:
        components:
          - type: multiple
            quantity: 5
            copySet:
              - chassis: human
                components:
                  - chassis: battleRifle # Would prefer namespacing, eg unsc/weaps/battleRifle
                    components:
                      - morphSight
                      - kineticBolts
                  - unscInfantryTraining
                  - flakArmor
                  - pulseGrenade

exampleNodes:
  - chassisName
  - chassis: chassisName
  - chassis: chassisName
    components:
      - chassis2Name
  - type: multiple
    quantity: 2
    copySet:
      - chassisName
